components:
  schemas:
    CustomerResponse:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          description: The auto-generated id of the customer
        username:
          type: string
          description: The unique username of the customer
        password:
          type: string
          description: The password of the customer
        email:
          type: string
          description: The user email
        phoneNumber:
          type: string
          description: The user phone number
        firstName:
          type: string
          description: The first name of the customer
        lastName:
          type: string
          description: The last name of the customer
        imageURL:
          type: string
          description: The image URL of the customer
        loyaltyPoints:
          type: number
          description: The loyalty points of the customer

    CustomerRequest:
      type: object
      name: Customer
      required:
        - name
      properties:
        username:
          type: string
          description: The unique username of the customer
        password:
          type: string
          description: The password of the customer
        email:
          type: string
          description: The user email
        phoneNumber:
          type: string
          description: The user phone number
        firstName:
          type: string
          description: The first name of the customer
        lastName:
          type: string
          description: The last name of the customer

# Defining Pathes

paths:
  /customers:
    get:
      summary: Retrieve a list of all existing customers
      tags: [Customers]
      responses:
        200:
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
    post:
      summary: Add a new customer
      tags: [Customers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        200:
          description: The customer was successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'

  /customers/{id}:
    get:
      summary: Retrieve a customer by ID
      tags: [Customers]
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      responses:
        200:
          description: A customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    put:
      summary: Update a customer
      tags: [Customers]
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      requestBody:
        description: You can only provide the fields you want to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        200:
          description: The customer was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    delete:
      summary: Delete a customer
      tags: [Customers]
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      responses:
        200:
          description: The customer was successfully deleted
        404:
          description: The customer was not found
