components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Enter JWT Bearer token
  schemas:
    CustomerResponse:
      type: object
      properties:
        id:
          type: string
          description: The auto-generated id of the customer
        username:
          type: string
          description: The unique username of the customer
        email:
          type: string
          description: The user email
        phoneNumber:
          type: string
          description: The user phone number
        firstName:
          type: string
          description: The first name of the customer
        lastName:
          type: string
          description: The last name of the customer
        imageURL:
          type: string
          description: The image URL of the customer
        loyaltyPoints:
          type: number
          description: The loyalty points of the customer

    CustomerRequest:
      type: object
      required:
        - username
        - password
        - email
        - firstName
        - lastName
        - phoneNumber
      properties:
        username:
          type: string
          description: The unique username of the customer
        password:
          type: string
          description: The password of the customer
        email:
          type: string
          description: The user email
        phoneNumber:
          type: string
          description: The user phone number
        firstName:
          type: string
          description: The first name of the customer
        lastName:
          type: string
          description: The last name of the customer

    Address:
      type: object
      properties:
        street:
          type: string
          description: Street address including house/apartment number
        city:
          type: string
          description: City name
        state:
          type: string
          description: State or province
        zipCode:
          type: string
          description: Postal or ZIP code
        country:
          type: string
          description: Country name

    CartItem:
      type: object
      properties:
        productId:
          type: string
          description: ID of the product
        variantId:
          type: string
          description: ID of the product variant
        quantity:
          type: integer
          description: Quantity of the item
        price:
          type: number
          description: Price of the item

    Cart:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        subtotal:
          type: number
          description: Total price of all items in the cart

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        message:
          type: string
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        message:
          type: string

# Defining Paths
paths:
  /customers:
    get:
      summary: Retrieve a list of all existing customers
      tags: [Customers]
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of customers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Add a new customer
      tags: [Customers]
      security:
        - bearerAuth: []
      description: Create a new customer (Admin access required)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        201:
          description: The customer was successfully added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/CustomerResponse'
        400:
          description: Failed to add customer due to invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/{id}:
    get:
      summary: Retrieve a customer by ID
      tags: [Customers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      responses:
        200:
          description: Customer data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    $ref: '#/components/schemas/CustomerResponse'
        400:
          description: Failed to get customer due to invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update a customer
      tags: [Customers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      requestBody:
        description: You can only provide the fields you want to update
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                imageURL:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
                phoneNumber:
                  type: string
                username:
                  type: string
                address:
                  $ref: '#/components/schemas/Address'
      responses:
        200:
          description: The customer was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: Failed to update customer due to invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a customer
      tags: [Customers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      responses:
        200:
          description: The customer was successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        400:
          description: Failed to delete customer due to invalid ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/email:
    get:
      summary: Retrieve a customer by email
      tags: [Customers]
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: email
          required: true
          description: The email of the customer
          schema:
            type: string
      responses:
        200:
          description: Customer data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    $ref: '#/components/schemas/CustomerResponse'
        400:
          description: Failed to get customer due to missing email parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customers/{id}/cart:
    get:
      summary: Get a customer's shopping cart
      tags: [Customers]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the customer
          schema:
            type: string
      responses:
        200:
          description: Customer's cart retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    $ref: '#/components/schemas/Cart'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
