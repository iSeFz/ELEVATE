paths:
  /send-password-reset:
    post:
      summary: Send password reset email (OTP)
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        200:
          description: Password reset email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
        400:
          description: Invalid email
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string

  /confirm-password-reset:
    post:
      summary: Confirm password reset with OTP and new password
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oobCode
                - newPassword
              properties:
                oobCode:
                  type: string
                  description: The OTP code received by email
                newPassword:
                  type: string
                  format: password
                  description: The new password to set
      responses:
        200:
          description: Password has been reset successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
        400:
          description: Invalid OTP or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string

  /me:
    get:
      summary: Get current user profile
      tags: [Authentication]
      parameters:
        - in: query
          name: userRole
          schema:
            type: string
          description: User role to filter by (Admin use only)
      responses:
        200:
          description: Current user profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    type: object
                    description: User profile data
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string

  /refresh-token:
    post:
      summary: Refresh Firebase access token using a refresh token
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: The Firebase refresh token
      responses:
        200:
          description: New access token generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        description: JWT token for authentication
                      refreshToken:
                        type: string
                        description: Refresh token for obtaining new access tokens afetr accessToken expiration 
                      expiresIn:
                        type: string
                        description: Expiration time in seconds for accessToken
        400:
          description: Invalid or missing refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string
        401:
          description: Refresh failed or unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string
