paths:
  /brand-owners/signup:
    post:
      summary: Register a new brand owner and create their brand
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandOwnerSignupRequest'
      responses:
        201:
          description: The brand owner and brand were successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
                    description: Success message
                    example: Brand owner and brand registration successful
                  data:
                    type: object
                    properties:
                      brandOwner:
                        $ref: '#/components/schemas/BrandOwnerResponse'
                      brand:
                        $ref: '#/components/schemas/BrandResponse'
        400:
          description: Registration failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string

  /brand-owners/login:
    post:
      summary: Brand owner login
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: The brand owner was successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/BrandOwnerResponse'
                      token:
                        type: string
                        description: JWT token for authentication
        400:
          description: Login failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [error]
                  message:
                    type: string

  /brand-owners:
    get:
      summary: Get all brand owners (admin only)
      tags: [Brand Owners]
      responses:
        200:
          description: List of all brand owners
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BrandOwnerResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
  /brand-owners/me:
    get:
      summary: Get a brand owner by ID
      tags: [Brand Owners]
      responses:
        200:
          description: Brand owner details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    $ref: '#/components/schemas/BrandOwnerResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Brand owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    put:
      summary: Update a brand owner
      tags: [Brand Owners]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandOwnerUpdateRequest'
      responses:
        200:
          description: Brand owner updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  data:
                    $ref: '#/components/schemas/BrandOwnerResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Brand owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    
    delete:
      summary: Delete a brand owner and their associated brand (For admin only)
      tags: [Brand Owners]
      responses:
        200:
          description: Brand owner and associated brand deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  message:
                    type: string
                    example: Brand owner and associated brand deleted successfully
        401:
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Brand owner not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    BrandOwnerSignupRequest:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
        - username
        - brand
      properties:
        email:
          type: string
          format: email
          description: The brand owner email
        firstName:
          type: string
          description: The first name of the brand owner
        lastName:
          type: string
          description: The last name of the brand owner
        password:
          type: string
          format: password
          description: The brand owner password
        username:
          type: string
          description: The unique username of the brand owner
        imageURL:
          type: string
          description: The image URL of the brand owner (optional)
        brand:
          type: object
          required:
            - brandName
          description: Data for creating the brand
          properties:
            brandName:
              type: string
              description: The unique name of the brand
            storyDescription:
              type: string
              description: Brand description/story
            imageURL:
              type: string
              description: URL to the brand's logo
            email:
              type: string
              description: Brand's contact email
            phoneNumbers:
              type: array
              items:
                type: string
              description: Contact phone numbers
            industry:
              type: string
              description: Industry the brand belongs to
            addresses:
              type: array
              items:
                $ref: '#/components/schemas/Address'
              description: Brand's physical addresses
            websites:
              type: array
              items:
                $ref: '#/components/schemas/Website'
              description: Brand's websites

    BrandOwnerRequest:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
        - username
      properties:
        email:
          type: string
          format: email
          description: The brand owner email
        firstName:
          type: string
          description: The first name of the brand owner
        lastName:
          type: string
          description: The last name of the brand owner
        password:
          type: string
          format: password
          description: The brand owner password
        username:
          type: string
          description: The unique username of the brand owner
        imageURL:
          type: string
          description: The image URL of the brand owner (optional)

    BrandOwnerUpdateRequest:
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the brand owner
        lastName:
          type: string
          description: The last name of the brand owner
        username:
          type: string
          description: The unique username of the brand owner
        imageURL:
          type: string
          description: The image URL of the brand owner

    BrandOwnerResponse:
      type: object
      properties:
        id:
          type: string
          description: The auto-generated id of the brand owner
        role:
          type: string
          enum: [brandOwner]
          description: The role of the user
        email:
          type: string
          description: The brand owner email
        firstName:
          type: string
          description: The first name of the brand owner
        lastName:
          type: string
          description: The last name of the brand owner
        username:
          type: string
          description: The unique username of the brand owner
        brandId:
          type: string
          description: ID of the brand this owner manages
        imageURL:
          type: string
          description: The image URL of the brand owner
        createdAt:
          type: object
          properties:
            _seconds:
              type: number
              description: Seconds since Unix epoch
            _nanoseconds:
              type: number
              description: Nanoseconds fraction
          description: Timestamp when the brand owner was created
        updatedAt:
          type: object
          properties:
            _seconds:
              type: number
              description: Seconds since Unix epoch
            _nanoseconds:
              type: number
              description: Nanoseconds fraction
          description: Timestamp when the brand owner was last updated

    Website:
      type: object
      properties:
        type:
          type: string
          description: Type of website (e.g., official, social, blog)
        url:
          type: string
          description: Website URL

    BrandResponse:
      $ref: '../brand.yaml#/components/schemas/BrandResponse'

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        message:
          type: string
    
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            token:
              type: string
              description: JWT token for authentication
            user:
              $ref: '#/components/schemas/BrandOwnerResponse'